'use strict'; // code generated by pbf v3.2.1

// EpisodeSims ========================================

export const EpisodeSims = self.EpisodeSims = {};

EpisodeSims.read = function (pbf, end) {
    return pbf.readFields(EpisodeSims._readField, { rows: [] }, end);
};
EpisodeSims._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.rows.push(EpisodeSim.read(pbf, pbf.readVarint() + pbf.pos));
};
EpisodeSims.write = function (obj, pbf) {
    if (obj.rows) for (var i = 0; i < obj.rows.length; i++) pbf.writeMessage(1, EpisodeSim.write, obj.rows[i]);
};

// IDs ========================================

export const IDs = self.IDs = {};

IDs.read = function (pbf, end) {
    return pbf.readFields(IDs._readField, { rows: [] }, end);
};
IDs._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.rows.push(ID.read(pbf, pbf.readVarint() + pbf.pos));
};
IDs.write = function (obj, pbf) {
    if (obj.rows) for (var i = 0; i < obj.rows.length; i++) pbf.writeMessage(1, ID.write, obj.rows[i]);
};

// ID ========================================

var ID = self.ID = {};

ID.read = function (pbf, end) {
    return pbf.readFields(ID._readField, { id: "", idNum: 0 }, end);
};
ID._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.idNum = pbf.readVarint();
};
ID.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.idNum) pbf.writeVarintField(2, obj.idNum);
};

// EpisodeSim ========================================

var EpisodeSim = self.EpisodeSim = {};

EpisodeSim.read = function (pbf, end) {
    return pbf.readFields(EpisodeSim._readField, { idNum1: 0, idNum2: 0, similarity: 0 }, end);
};
EpisodeSim._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.idNum1 = pbf.readVarint();
    else if (tag === 2) obj.idNum2 = pbf.readVarint();
    else if (tag === 3) obj.similarity = pbf.readFloat();
};
EpisodeSim.write = function (obj, pbf) {
    if (obj.idNum1) pbf.writeVarintField(1, obj.idNum1);
    if (obj.idNum2) pbf.writeVarintField(2, obj.idNum2);
    if (obj.similarity) pbf.writeFloatField(3, obj.similarity);
};
